name: Build OpenWrt

on:
  workflow_dispatch:
    inputs:
      releases_branch:
        description: "Select the releases branch"
        required: true
        default: "openwrt:24.10.0"
        type: choice
        options:
          - openwrt:24.10.0
          - openwrt:23.05.5
          - immortalwrt:24.10.0-rc4
          - immortalwrt:23.05.4
      devices:
        description: "Select device target"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - s905x
          - s905x2
          - s905x3
          - s905x4
          - s912
          - h5-orangepi-zeroplus2
          - h5-orangepi-zeroplus
          - h5-orangepi-prime
          - h5-orangepi-pc2
          - h6-orangepi-lite2
          - h6-orangepi-1plus
          - h6-orangepi-3
          - h6-orangepi-3lts
          - h616-orangepi-zero2
          - h618-orangepi-zero2w
          - h618-orangepi-zero3
          - rk3566-orangepi-3b
          - rk3588s-orangepi-5
          - bcm2710-rpi-3b
          - bcm2711-rpi-4b
          - x86-64
      notify:
        description: "Notify to Telegram"
        required: true
        default: false
        type: boolean

env:
  TZ: Asia/Jakarta
  IMAGEBUILDER_SH: imagebuilder.sh
  DEBIAN_FRONTEND: noninteractive
  APT_PACKAGES: build-essential libncurses5-dev zlib1g-dev gawk git gettext libssl-dev rsync wget unzip tar gzip qemu-utils mkisofs jq python3 python3-pip
  CURRENT_BRANCH: ${{ github.ref_name }}
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      devices: ${{ steps.matrix.outputs.devices }}
      message_id: ${{ steps.telegram.outputs.message_id }}
    steps:
      - name: Configure Build Matrix
        id: matrix
        run: |
          if [ "${{ inputs.devices }}" = "all" ]; then
            devices=$(jq -nc '[ "s905x", "s905x2", "s905x3", "s905x4", "s912", "h5-orangepi-zeroplus2", "h5-orangepi-zeroplus", "h5-orangepi-prime", "h5-orangepi-pc2", "h6-orangepi-lite2", "h6-orangepi-1plus", "h6-orangepi-3", "h6-orangepi-3lts", "h616-orangepi-zero2", "h618-orangepi-zero2w", "h618-orangepi-zero3", "rk3566-orangepi-3b", "rk3588s-orangepi-5", "bcm2710-rpi-3b", "bcm2711-rpi-4b", "x86-64" ]')
          else
            devices=$(jq -nc --arg d "${{ inputs.devices }}" '[$d]')
          fi
          echo "devices=$devices" >> $GITHUB_OUTPUT

      - name: Send Initial Telegram Message
        id: telegram
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GROUP_ID: ${{ secrets.CHAT_ID }}
        run: |
          devices=$(echo '${{ steps.matrix.outputs.devices }}' | jq -r '.[]')
          
          MESSAGE="=======================%0A"
          MESSAGE+="üöÄ *RTA-WRT | Build Status*%0A"
          MESSAGE+="=======================%0A"
          MESSAGE+="üìå *Versi*: ${{ inputs.releases_branch }}%0A"
          MESSAGE+="üåø *Branch*: ${{ github.ref_name }}%0A"
          MESSAGE+="üìÖ *Tanggal*: $(date "+%d-%m-%Y %H:%M:%S")%0A"
          MESSAGE+="-----------------------%0A"
          MESSAGE+="üìã *Device List*%0A"
          
          for device in $devices; do
            MESSAGE+="üîπ $device | ‚è≥ Building%0A"
          done
          
          MESSAGE+="======================="
          
          RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
            -d chat_id=$GROUP_ID \
            -d parse_mode=Markdown \
            -d text="$MESSAGE")
          
          echo "message_id=$(echo $RESPONSE | jq -r '.result.message_id')" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        device: ${{ fromJSON(needs.prepare.outputs.devices) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ${{ env.APT_PACKAGES }}

      - name: Add changelog info to new release description
        id: changelog
        shell: bash
        run: |
          r=$(awk '/^\*\*Changelog\*\*/ {if(found) exit; found=1} found' ${PWD}/CHANGELOG.md)
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"  
          echo "changelog=$r" >> $GITHUB_OUTPUT 

      - name: Setup Environment
        run: |
          sudo timedatectl set-timezone "$TZ"
          echo "datetime=$(date +'%d%m%Y')" >> $GITHUB_ENV
          echo "openwrt_version=${{ inputs.releases_branch }}" >> $GITHUB_ENV
          echo "openwrt_tag=$(echo "${{ inputs.releases_branch }}" | tr ':' '_')" >> $GITHUB_ENV

      - name: Build Image
        id: build
        run: |
          chmod +x ${IMAGEBUILDER_SH}
          if sudo bash ${IMAGEBUILDER_SH} ${{ env.openwrt_version }} "${{ matrix.device }}"; then
            echo "status=‚úÖ Sukses" >> $GITHUB_OUTPUT
          else
            echo "status=‚ùå Gagal" >> $GITHUB_OUTPUT
          fi

      - name: Create Status File
        run: |
          echo "Device: ${{ matrix.device }}" > status.txt
          echo "Status: ${{ steps.build.outputs.status }}" >> status.txt

      - name: Upload Build Status
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-status-${{ matrix.device }}
          path: status.txt

      - name: Upload to Release
        if: ${{ steps.build.outputs.status == '‚úÖ Sukses' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: imagebuilder/out_firmware/*
          tag: ${{ env.openwrt_tag }}-${{ env.datetime }}
          release_name: RTA-WRT - ${{ env.openwrt_tag }}-${{ env.datetime }}
          overwrite: true
          prerelease: ${{ github.ref_name == 'dev' }}
          promote: ${{ github.ref_name != 'dev' }}
          body: |
            ---
  
            # üöÄ **RTA-WRT - Image Information**
                
            ---
                
            ### üì• **Download Statistics**
                
            ![GitHub Downloads](https://img.shields.io/github/downloads/rizkikotet-dev/RTA-WRT/${{ env.openwrt_tag }}-${{ env.datetime }}/total?style=for-the-badge&logo=Openwrt)
                
            ---
                
            ### üì¢ **Telegram Support**
                
            [![Channel](https://img.shields.io/badge/Telegram-Channel-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2Frtawrt)](https://t.me/rtawrt)
            [![Group](https://img.shields.io/badge/Telegram-Group-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2Fbackup_rtawrt)](https://t.me/backup_rtawrt)
            [![Personal](https://img.shields.io/badge/Telegram-Personal-%23059dfa?style=for-the-badge&logo=Telegram&link=https%3A%2F%2Ft.me%2FRizkiKotet)](https://t.me/RizkiKotet)
                
            ---
              
            ### üìù **Changelog**
  
            ${{ steps.changelog.outputs.changelog }}
                
            ---
                
            ## ‚ö†Ô∏è Peringatan untuk Instalasi Pertama
            > **Catatan:** Booting awal memerlukan waktu agak lama karena proses partisi ulang dan konfigurasi tambahan.
  
            ---
  
            ## üì± Device yang Didukung
  
            ### Amlogic
            - **s905x** (HG680P, B860Hv1/v2) | Mod Boot SDCARD
            - **s905x2** (HG680FJ, B860Hv5, MNC CYBORG001, X96Max-4G, X96Max-2G, MECOOL-KM3-4G, Tanix-Tx5-Max, A95X-F2)
            - **s905x3** (X96-Max+, HK1-Box, Vontar-X3, H96-Max-X3, Ugoos-X3, TX3(QZ), TX3(BZ), X96-Air, X96-Max+_A100, A95X-F3-Air, Tencent-Aurora-3Pro(s905x3-b), X96-Max+Q1, X96-Max+100W, X96-Max+_2101, Infinity-B32, Whale, X88-Pro-X3, X99-Max-Plus, Transpeed-X3-Plus)
            - **s905x4** (AKARI AX810, dll)
            - **s912** (Tanix-TX8-Max, Tanix-TX9-Pro(3G), Tanix-TX9-Pro(2G), Tanix-TX92, Nexbox-A1, Nexbox-A95X-A2, A95X, H96-Pro-Plus, VORKE-Z6-Plus, Mecool-M8S-PRO-L, Vontar-X92, T95Z-Plus, Octopus-Planet, Phicomm-T1, TX3-Mini, OneCloudPro-V1.1_V1.2)
  
            ### Allwinner
            - **H5** (Orange Pi Zero Plus 2, Orange Pi Zero Plus, Orange Pi Prime, Orange Pi PC2)
            - **H6** (Orange Pi 1 Plus, Orange Pi Lite 2, Orange Pi 3 LTS, Orange Pi 3)
            - **H616** (Orange Pi Zero 2)
            - **H618** (Orange Pi Zero 3, Orange Pi Zero 2W)
  
            ### Rockchip
            - **RK3566** (Orange Pi 3B)
            - **RK3588S** (Orange Pi 5)
            - **RK3588** (Orange Pi 5 Plus)
  
            ### Broadcom
            - **BCM2710** (Raspberry Pi 3A+/3B/3B+/CM3/Zero2/Zero2W - 64bit)
            - **BCM2711** (Raspberry Pi 4B/400/CM4 - 64bit)
  
            ### Generic
            - **x86-64**
  
            ---
  
            ## ‚ÑπÔ∏è Informasi Sistem
            - **IP Default:** 192.168.1.1
            - **Username:** root
            - **Password:** rtawrt
            - **SSID:** RTA-WRT_2g / RTA-WRT_5g
  
            ### ‚≠ê Fitur Utama
            - Modemmanager dengan koneksi ulang otomatis
            - OpenClash dengan MetaCubeX Mihomo terbaru
            - Passwall *Tunneling* alternatif
            - MihomoTProxy *Tunneling* alternatif
            - TinyFm file manager
            - Internet Detector dan Lite Watchdog
            - Tema Argon & Material dengan tampilan login kustom
            - 3ginfo lite, Modeminfo, sms-tool, dan aplikasi modem lainnya
            - Dukungan Layar OLED (teruji di Raspberry Pi 4B)
  
            ---
                
            **üöÄ Tetap terhubung, nikmati performa maksimal dengan RTA-WRT! üöÄ**
                
            ---

  
  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Status Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Update Telegram Message
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GROUP_ID: ${{ secrets.CHAT_ID }}
          MESSAGE_ID: ${{ needs.prepare.outputs.message_id }}
        run: |
          devices=$(echo '${{ needs.prepare.outputs.devices }}' | jq -r '.[]')
          MESSAGE="=======================%0A"
          MESSAGE+="üöÄ *RTA-WRT | Build Status*%0A"
          MESSAGE+="=======================%0A"
          MESSAGE+="üìå *Versi*: ${{ inputs.releases_branch }}%0A"
          MESSAGE+="üåø *Branch*: ${{ github.ref_name }}%0A"
          MESSAGE+="üìÖ *Tanggal*: $(date "+%d-%m-%Y %H:%M:%S")%0A"
          MESSAGE+="-----------------------%0A"
          MESSAGE+="üìã *Device List*%0A"
          
          for device in $devices; do
            status=$(cat artifacts/build-status-$device/status.txt | grep "Status" | cut -d' ' -f2-)
            MESSAGE+="üîπ $device | $status%0A"
          done
          
          MESSAGE+="======================="
          
          curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/editMessageText" \
            -d chat_id=$GROUP_ID \
            -d message_id=$MESSAGE_ID \
            -d parse_mode=Markdown \
            -d text="$MESSAGE"

  opsional:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install Dependencies
        run: |
          set -euxo pipefail
          sudo apt-get update -qq
          sudo apt-get install -y ${{ env.APT_PACKAGES }}

      - name: Add changelog info to new release description
        id: changelog
        shell: bash
        run: |
          r=$(awk '/^\*\*Changelog\*\*/ {if(found) exit; found=1} found' ${PWD}/CHANGELOG.md)
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"  
          echo "changelog=$r" >> $GITHUB_OUTPUT 

      - name: Change Branch
        uses: actions/checkout@v4
        with:
          ref: info

      - name: Setup Environment
        id: environment
        run: |
          set -euxo pipefail
          sudo timedatectl set-timezone "$TZ"
          echo "datetime=$(date +'%d-%m-%Y')" >> $GITHUB_ENV
          echo "openwrt_version=${{ inputs.releases_branch }}" >> $GITHUB_ENV
          echo "openwrt_tag=$(echo "${{ inputs.releases_branch }}" | tr ':' '_')" >> $GITHUB_ENV

      - name: Update Branch Info
        id: update
        run: |
          changelog_message="${{ steps.changelog.outputs.changelog }}"
          r=$(echo "$changelog_message" | sed -e 's/%0A/\n/g' -e 's/%0D/\r/g' -e 's/%25/%/g')
          rm -rf $CURRENT_BRANCH/changelog.txt
          echo "changelog=$r" >> $CURRENT_BRANCH/changelog.txt
          echo "${{ env.openwrt_tag }}--$( [ "$CURRENT_BRANCH" == "main" ] && echo "main" || echo "dev" )" > $CURRENT_BRANCH/version.txt
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add . || echo "No files to commit"
          git commit -m "Auto Release: v${{ env.openwrt_version }}" || echo "No changes to commit"
          git push || echo "Error pushing to GitHub"

      - name: Notify Telegram
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          MESSAGE_THREAD_ID: 36
        run: |
          DATETIME=${{ env.datetime }}
          OPENWRT_VERSION=${{ env.openwrt_version }}
      
          MESSAGE_STABLE=$(printf "üéØ *RTA-WRT Firmware Update*\n"
            "‚úÖ _Stable Release_\n\n"
            "üîπ *Versi:* \`$OPENWRT_VERSION\`\n"
            "üîπ *Tanggal:* \`$DATETIME\`\n\n"
            "üìå *Catatan:*\n"
            "üîí Versi stabil dengan peningkatan keamanan dan performa!\n"
            "üì¢ Disarankan untuk semua pengguna agar mendapatkan pengalaman terbaik!\n"
          )
      
          MESSAGE_DEV=$(printf "üöÄ *RTA-WRT Firmware Update*\n"
            "üåü _Development Release_\n\n"
            "üîπ *Versi:* \`$OPENWRT_VERSION\`\n"
            "üîπ *Tanggal:* \`$DATETIME\`\n\n"
            "üìå *Catatan:*\n"
            "üî• Pastikan untuk mencadangkan konfigurasi sebelum pembaruan!\n"
            "üîÑ Selalu gunakan versi terbaru untuk performa terbaik!\n"
          )
      
          BUTTONS_STABLE='{
              "inline_keyboard": [
                  [
                      {"text": "üì• Unduh Firmware", "url": "https://github.com/rizkikotet-dev/RTA-WRT/releases/latest"},
                      {"text": "üìñ Changelog", "url": "https://raw.githubusercontent.com/rizkikotet-dev/RTA-WRT/refs/heads/info/main/changelog.txt"}
                  ]
              ]
          }'
      
          BUTTONS_DEV='{
              "inline_keyboard": [
                  [
                      {"text": "üì• Unduh Firmware", "url": "https://github.com/rizkikotet-dev/RTA-WRT/releases"},
                      {"text": "üìñ Changelog", "url": "https://raw.githubusercontent.com/rizkikotet-dev/RTA-WRT/refs/heads/info/dev/changelog.txt"}
                  ]
              ]
          }'
      
          if [ "${{ inputs.notify }}" == "true" ]; then
            if [ "${{ env.CURRENT_BRANCH }}" == "main" ]; then
              curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
                -d "chat_id=$CHAT_ID" \
                -d "text=$MESSAGE_STABLE" \
                -d "parse_mode=Markdown" \
                -d "reply_markup=$BUTTONS_STABLE" || exit 1
            else
              curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
                -d "chat_id=$CHAT_ID" \
                -d "text=$MESSAGE_DEV" \
                -d "parse_mode=Markdown" \
                -d "reply_markup=$BUTTONS_DEV" || exit 1
            fi
          fi
          # -d "message_thread_id=$MESSAGE_THREAD_ID"

      - name: Delete workflow runs
        if: always()
        continue-on-error: true
        uses: Mattraks/delete-workflow-runs@v2.0.6
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0