name: Update Build Status

on:
  repository_dispatch:
    types: [update-build-status]

jobs:
  update-status:
    runs-on: ubuntu-latest
    steps:
      - name: Update Telegram Message
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          GROUP_ID: ${{ secrets.CHAT_ID }}
          TOPIC_ID: 616
        run: |
          if ! device_statuses=$(jq -r 'to_entries | map("\(.key)|\(.value)") | .[]' <<< '${{ toJSON(github.event.client_payload.device_statuses) }}'); then
            echo "Error parsing device statuses JSON"
            exit 1
          fi
          
          MESSAGE="=======================%0A"
          MESSAGE+="ðŸš€ *RTA-WRT | Build Status*%0A"
          MESSAGE+="=======================%0A"
          MESSAGE+="ðŸ“Œ *Versi*: ${{ github.event.client_payload.releases_branch }}%0A"
          MESSAGE+="ðŸŒ¿ *Branch*: ${{ github.event.client_payload.ref_name }}%0A"
          MESSAGE+="ðŸ“… *Tanggal*: $(date "+%d-%m-%Y %H:%M:%S")%0A"
          MESSAGE+="-----------------------%0A"
          MESSAGE+="ðŸ“‹ *Device List*%0A"
          
          while IFS='|' read -r device status; do
            MESSAGE+="ðŸ”¹ $device | $status%0A"
          done <<< "$device_statuses"
          
          MESSAGE+="======================="
          
          curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/editMessageText" \
            -d chat_id=$GROUP_ID \
            -d message_id=${{ github.event.client_payload.message_id }} \
            -d parse_mode=Markdown \
            -d text="$MESSAGE"

      - name: Update Final Status
        if: always()
        continue-on-error: true
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: delete-workflows